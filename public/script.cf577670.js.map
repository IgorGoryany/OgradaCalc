{"version":3,"sources":["js/variables/variables.js","js/support/lengthCalc.js","js/support/fenceElementsCount.js","js/calc/calcLogicTo35Fence.js","js/calc/calcLogicToFrameFence.js","js/calc/calcLogicToSimpleFence.js","js/calc/calcLogicTo15And25Fence.js","js/calc/entryCalcLogic.js","js/support/choosingImage.js","js/support/handleCloseResult.js","js/print/printTotalDetailsList.js","js/calc/handleCalcTotalDetailsList.js","js/support/sizesSupp.js","js/print/print35Fence.js","js/print/print5Fence.js","js/print/printFrameFence.js","js/print/printSimpleFence.js","js/support/fenceSideChoose.js","js/print/print15And25Fence.js","js/print/entryPrint.js","js/distribution/distributionCalcFence.js","js/distribution/distributionLogic.js","js/script.js"],"names":["sideXInput","document","getElementById","exports","sideYInput","calc","select","result","total","totalCalc","lengthCalc","length","pillar","pilarCount","lockCount","divCount","x","fenceElementsCount","isBigX","isBigY","lockCountX","divCountX","pilarCountX","lockCountY","divCountY","pilarCountY","_lengthCalc","require","_fenceElementsCount2","_variables","calcLogicTo35Fence","tube","tubeInside","lengthX","value","lengthY","_fenceElementsCount","sideX","sideY","gate1","gate2","insideSideX","insideSideY","insideGate1","insideGate2","countX","countY","calcLogicToFrameFence","calcLogicToSimpleFence","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","len","arr2","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","push","err","return","isArray","calcLogicTo15And25Fence","jumper","gateCount","_insideCalcLogic2","insideCalcLogic","sideXRectangle","sideXJumper","rectangleCountX","halfXRectangle","_insideCalcLogic4","sideYRectangle","sideYJumper","rectangleCountY","rectangleGateCount","sizes","halfYRectangle","rectangleSectionGate1","rectangleInsideGate1","rectangleSectionGate2","rectangleInsideGate2","console","log","rectangleLength","standardRectangle","jumperLength","Infinity","rectangleCount","bla","supportInsideCalcLogic","jumperValue","Math","abs","round","_calcLogicTo35Fence","_calcLogicToFrameFence","_calcLogicToSimpleFence","_calcLogicTo15And25Fence","_X","_interopRequireDefault","_X2","_X3","_X4","_X5","_X6","_X7","_X8","_X9","_X10","obj","__esModule","default","choosingImage","img4000X4000","img3000X3000","img2000X4000","img3300X4000","img3300X2000","img3300X3000","img4000X2000","img4000X3000","img2000X3000","img2500X2000","handleCloseResult","removeEventListener","closest","nextElementSibling","remove","renameNumber","children","classList","innerText","contains","handleCalcTotalDetailsList","numberItems","getElementsByClassName","concat","printTotalDetailsList","totalFrame25","totalFrame20","totalPattern25","totalPattern20","totalPattern15","innerHTML","map","el","join","_printTotalDetailsList","frame25","frame20","pattern25","pattern20","pattern15","uniqueValuesFrame25","uniqueValuesFrame20","uniqueValuesPattern25","uniqueValuesPattern20","uniqueValuesPattern15","item","split","indexOf","sizesSupp","image","isReverse","_choosingImage","_handleCloseResult","_handleCalcTotalDetailsList","_sizesSupp","print35Fence","_ref","number","dop460","insertAdjacentHTML","addEventListener","print5Fence","printFrameFence","close","printSimpleFence","fenceSideChoose","_sizesSupp2","_fenceSideChoose","print15And25Fence","_print35Fence","_print5Fence","_printFrameFence","_printSimpleFence","_print15And25Fence","_entryCalcLogic","_entryPrint","distributionCalcFence","modelNum","_distributionCalcFence","distributionLogic","sizeX","sizeY","_distributionLogic","handlePress","e","isNaN","target","key","preventDefault","handleCalc","alert","String","Date","getFullYear","toggle"],"mappings":"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","file":"script.cf577670.js","sourceRoot":"..","sourcesContent":["export const sideXInput = document.getElementById('width');\r\nexport const sideYInput = document.getElementById('height');\r\nexport const calc = document.getElementById('calc');\r\nexport const select = document.getElementById('select');\r\nexport const result = document.getElementById('result');\r\nexport const total = document.getElementById('total');\r\nexport const totalCalc = document.getElementById('total-calc');\r\n","export function lengthCalc(length, pillar, pilarCount, lockCount, divCount) {\r\n\tconst x = (length - pillar * pilarCount - 15 * lockCount) / divCount;\r\n\r\n\tif (x % 10 > 0 && x % 10 <= 5) {\r\n\t\treturn 5 - (x % 10) + x;\r\n\t}\r\n\r\n\tif (x % 10 > 5) {\r\n\t\treturn 10 - (x % 10) + x;\r\n\t}\r\n\treturn x;\r\n}\r\n","export function fenceElementsCount(isBigX, isBigY) {\r\n\treturn {\r\n\t\tlockCountX: isBigX ? 2 : 1,\r\n\t\tdivCountX: isBigX ? 2 : 1,\r\n\t\tpilarCountX: isBigX ? 3 : 2,\r\n\t\tlockCountY: isBigY ? 2 : 1,\r\n\t\tdivCountY: isBigY ? 2 : 1,\r\n\t\tpilarCountY: isBigY ? 3 : 2,\r\n\t};\r\n}\r\n","import { lengthCalc } from '../support/lengthCalc';\r\nimport { fenceElementsCount } from '../support/fenceElementsCount';\r\nimport { sideXInput, sideYInput } from '../variables/variables';\r\n\r\nexport function calcLogicTo35Fence(pillar, tube, tubeInside, isBigX, isBigY) {\r\n\tconst [lengthX, lengthY] = [+sideXInput.value, +sideYInput.value];\r\n\r\n\tconst {\r\n\t\tlockCountX,\r\n\t\tdivCountX,\r\n\t\tpilarCountX,\r\n\t\tlockCountY,\r\n\t\tdivCountY,\r\n\t\tpilarCountY,\r\n\t} = fenceElementsCount(isBigX, isBigY);\r\n\r\n\tconst sideX = lengthCalc(lengthX, pillar, pilarCountX, lockCountX, divCountX);\r\n\tconst sideY = lengthCalc(lengthY, pillar, pilarCountY, lockCountY, divCountY);\r\n\r\n\treturn {\r\n\t\tsideX,\r\n\t\tsideY,\r\n\r\n\t\tgate1: lengthX >= 3400 ? sideX : lengthX - pillar * 3 - 510,\r\n\t\tgate2: lengthX >= 3400 ? lengthX - pillar * 4 - 525 - sideX : false,\r\n\r\n\t\tinsideSideX: sideX - 460 * 2 - tube,\r\n\r\n\t\tinsideSideY: sideY - 460 * 2 - tube,\r\n\r\n\t\tinsideGate1:\r\n\t\t\tlengthX >= 3400\r\n\t\t\t\t? sideX - 460 * 2 - tube\r\n\t\t\t\t: lengthX - pillar * 3 - 460 - 510,\r\n\t\tinsideGate2:\r\n\t\t\tlengthX >= 3400 ? lengthX - pillar * 4 - 460 - 525 - sideX : false,\r\n\r\n\t\ttube,\r\n\t\ttubeInside,\r\n\r\n\t\tcountX: isBigX ? 2 : 1,\r\n\t\tcountY: isBigY ? 2 : 1,\r\n\t};\r\n}\r\n","import { lengthCalc } from '../support/lengthCalc';\r\nimport { fenceElementsCount } from '../support/fenceElementsCount';\r\nimport { sideXInput, sideYInput } from '../variables/variables';\r\n\r\nexport function calcLogicToFrameFence(pillar, tube, isBigX, isBigY) {\r\n\tconst [lengthX, lengthY] = [+sideXInput.value, +sideYInput.value];\r\n\r\n\tconst {\r\n\t\tlockCountX,\r\n\t\tdivCountX,\r\n\t\tpilarCountX,\r\n\t\tlockCountY,\r\n\t\tdivCountY,\r\n\t\tpilarCountY,\r\n\t} = fenceElementsCount(isBigX, isBigY);\r\n\r\n\tconst sideX = lengthCalc(lengthX, pillar, pilarCountX, lockCountX, divCountX);\r\n\tconst sideY = lengthCalc(lengthY, pillar, pilarCountY, lockCountY, divCountY);\r\n\r\n\treturn {\r\n\t\tsideX,\r\n\t\tsideY,\r\n\r\n\t\tgate1: lengthX >= 3400 ? sideX : lengthX - pillar * 3 - 510,\r\n\t\tgate2: lengthX >= 3400 ? lengthX - pillar * 4 - 525 - sideX : false,\r\n\r\n\t\ttube,\r\n\r\n\t\tcountX: isBigX ? 2 : 1,\r\n\t\tcountY: isBigY ? 2 : 1,\r\n\t};\r\n}\r\n","import { lengthCalc } from '../support/lengthCalc';\r\nimport { fenceElementsCount } from '../support/fenceElementsCount';\r\nimport { sideXInput, sideYInput } from '../variables/variables';\r\n\r\nexport function calcLogicToSimpleFence(\r\n\tpillar,\r\n\ttube,\r\n\ttubeInside,\r\n\tisBigX,\r\n\tisBigY\r\n) {\r\n\tconst [lengthX, lengthY] = [+sideXInput.value, +sideYInput.value];\r\n\r\n\tconst {\r\n\t\tlockCountX,\r\n\t\tdivCountX,\r\n\t\tpilarCountX,\r\n\t\tlockCountY,\r\n\t\tdivCountY,\r\n\t\tpilarCountY,\r\n\t} = fenceElementsCount(isBigX, isBigY);\r\n\r\n\tconst sideX = lengthCalc(lengthX, pillar, pilarCountX, lockCountX, divCountX);\r\n\tconst sideY = lengthCalc(lengthY, pillar, pilarCountY, lockCountY, divCountY);\r\n\r\n\treturn {\r\n\t\tsideX,\r\n\t\tsideY,\r\n\r\n\t\tgate1: lengthX >= 3400 ? sideX : lengthX - pillar * 3 - 510,\r\n\t\tgate2: lengthX >= 3400 ? lengthX - pillar * 4 - 525 - sideX : false,\r\n\r\n\t\tinsideSideX: sideX - tube,\r\n\r\n\t\tinsideSideY: sideY - tube,\r\n\r\n\t\tinsideGate1: lengthX >= 3400 ? sideX - tube : lengthX - pillar * 3 - 510,\r\n\t\tinsideGate2: lengthX >= 3400 ? lengthX - pillar * 4 - 525 - sideX : false,\r\n\r\n\t\ttube,\r\n\t\ttubeInside,\r\n\r\n\t\tcountX: isBigX ? 2 : 1,\r\n\t\tcountY: isBigY ? 2 : 1,\r\n\t};\r\n}\r\n","import {lengthCalc} from '../support/lengthCalc';\r\nimport {fenceElementsCount} from '../support/fenceElementsCount';\r\nimport {sideXInput, sideYInput} from '../variables/variables';\r\n\r\n\r\nexport function calcLogicTo15And25Fence(pillar, tube, tubeInside, jumper, isBigX, isBigY) {\r\n\tconst [lengthX, lengthY] = [+sideXInput.value, +sideYInput.value];\r\n\r\n\tconst {\r\n\t\tlockCountX,\r\n\t\tdivCountX,\r\n\t\tpilarCountX,\r\n\t\tlockCountY,\r\n\t\tdivCountY,\r\n\t\tpilarCountY,\r\n\t} = fenceElementsCount(isBigX, isBigY);\r\n\tconst gateCount = lengthX >= 3400 ? 1 : 0;\r\n\r\n\tconst sideX = lengthCalc(lengthX, pillar, pilarCountX, lockCountX, divCountX);\r\n\tconst sideY = lengthCalc(lengthY, pillar, pilarCountY, lockCountY, divCountY);\r\n\r\n\tconst [sideXRectangle, sideXJumper, rectangleCountX, halfXRectangle,] = insideCalcLogic(sideX, tube, jumper);\r\n\tconst [sideYRectangle, sideYJumper, rectangleCountY, halfYRectangle] = insideCalcLogic(sideY, tube, jumper);\r\n\r\n\tlet rectangleGateCount = rectangleCountX - 1;\r\n\tif (rectangleCountX === 1 && lengthX - 510 >= 1600) {\r\n\t\trectangleGateCount = 1;\r\n\t}\r\n\tif (rectangleCountX === 1 && lengthX > 3000 && !gateCount) {\r\n\t\trectangleGateCount = 2;\r\n\t}\r\n\r\n\tconst sizes = {\r\n\t\tsideX,\r\n\t\tsideY,\r\n\r\n\t\tgate1: gateCount ? false : lengthX - pillar * 3 - 510,\r\n\t\tgate2: gateCount ? lengthX - pillar * 4 - 525 - sideX : false,\r\n\r\n\t\tsideXRectangle,\r\n\t\thalfXRectangle,\r\n\t\tsideXJumper,\r\n\r\n\t\tsideYRectangle,\r\n\t\thalfYRectangle,\r\n\t\tsideYJumper,\r\n\r\n\t\trectangleSectionGate1:\r\n\t\t\tgateCount\r\n\t\t\t\t? false\r\n\t\t\t\t: lengthX - pillar * 3 - 510 - sideXRectangle * rectangleGateCount - sideXJumper * (rectangleGateCount + 1),\r\n\t\trectangleInsideGate1: gateCount\r\n\t\t\t? false\r\n\t\t\t: 500 - tube * 2 - sideXJumper,\r\n\r\n\t\trectangleSectionGate2:\r\n\t\t\tgateCount\r\n\t\t\t\t? lengthX - pillar * 4 - 525 - sideX - sideXRectangle * rectangleCountX - sideXJumper * (rectangleGateCount + 1)\r\n\t\t\t\t: false,\r\n\t\trectangleInsideGate2:\r\n\t\t\tgateCount ? 500 - tube * 2 - sideXJumper : false,\r\n\r\n\t\ttube,\r\n\t\ttubeInside,\r\n\r\n\t\trectangleCountX,\r\n\t\trectangleCountY,\r\n\r\n\t\tcountX: isBigX ? 2 : 1,\r\n\t\tcountY: isBigY ? 2 : 1,\r\n\r\n\t\tgateCount,\r\n\t\trectangleGateCount,\r\n\t};\r\n\r\n\tconsole.log(sizes)\r\n\treturn sizes\r\n\r\n}\r\n\r\n//todo Кароче думай!\r\n//todo адо переписть логику по работе с rectangleSectionGate2\r\n\r\nfunction insideCalcLogic(length, tube, jumper) {\r\n\r\n\tconst standardRectangle = [520, 530, 540, 550, 560, 570, 580, 590,\r\n\t\t600, 610, 620, 630, 640, 650, 660, 670, 680, 690, 700, 710, 720, 730, 740,\r\n\t\t750, 760, 770, 780, 790, 800, 810, 820, 830, 840, 850, 860, 870, 880, 890,\r\n\t\t900,\r\n\t];\r\n\r\n\tlet jumperLength = Infinity;\r\n\tlet rectangleLength;\r\n\tlet rectangleCount = 2;\r\n\r\n\tif (length < 1665) {\r\n\t\tconst bla = supportInsideCalcLogic(length, tube, jumper, standardRectangle)\r\n\t\tconsole.log(bla)\r\n\t\treturn bla\r\n\t}\r\n\tif (length >= 2800) {\r\n\t\trectangleCount = 3\r\n\t}\r\n\r\n\tfor (let i = 0; i < standardRectangle.length; i++) {\r\n\t\tconst jumperValue = (length - tube - standardRectangle[i] * rectangleCount) / (rectangleCount + 1);\r\n\t\tif (\r\n\t\t\tMath.abs(jumperValue - jumper) <= Math.abs(jumperLength - jumper) &&\r\n\t\t\tjumperValue >= 0\r\n\t\t) {\r\n\t\t\tjumperLength = jumperValue;\r\n\t\t\trectangleLength = standardRectangle[i];\r\n\t\t}\r\n\t\tif (jumperValue === jumper) {\r\n\t\t\treturn [rectangleLength, Math.round(jumperLength), rectangleCount];\r\n\t\t}\r\n\t}\r\n\treturn [rectangleLength, Math.round(jumperLength), rectangleCount];\r\n}\r\n\r\nfunction supportInsideCalcLogic(length, tube, jumper, standardRectangle) {\r\n\tlet jumperLength = Infinity;\r\n\tlet rectangleLength;\r\n\r\n\tfor (let i = 0; i < standardRectangle.length; i++) {\r\n\t\tconst jumperValue = (length - tube - standardRectangle[i] * 1.5) / 2;\r\n\t\tif (\r\n\t\t\tMath.abs(jumperValue - jumper) <= Math.abs(jumperLength - jumper) &&\r\n\t\t\tjumperValue >= 0\r\n\t\t) {\r\n\t\t\tjumperLength = jumperValue;\r\n\t\t\trectangleLength = standardRectangle[i];\r\n\t\t}\r\n\t\tif (jumperValue === jumper) {\r\n\t\t\treturn [rectangleLength, Math.round(jumperLength), 1, rectangleLength / 2];\r\n\t\t}\r\n\t}\r\n\treturn [rectangleLength, Math.round(jumperLength), 1, rectangleLength / 2];\r\n}\r\n\r\n","import {calcLogicTo35Fence} from './calcLogicTo35Fence';\r\nimport {calcLogicToFrameFence} from './calcLogicToFrameFence';\r\nimport {calcLogicToSimpleFence} from './calcLogicToSimpleFence';\r\nimport {calcLogicTo15And25Fence} from './calcLogicTo15And25Fence';\r\n\r\nexport {\r\n\tcalcLogicTo35Fence,\r\n\tcalcLogicToFrameFence,\r\n\tcalcLogicToSimpleFence,\r\n\tcalcLogicTo15And25Fence,\r\n};\r\n","import { sideXInput, sideYInput } from '../variables/variables';\r\n\r\nimport img2000X3000 from '../../img/2000X3000.svg';\r\nimport img2000X4000 from '../../img/2000X4000.svg';\r\nimport img2500X2000 from '../../img/2500X2000.svg';\r\nimport img3000X3000 from '../../img/3000X3000.svg';\r\nimport img3300X2000 from '../../img/3300X2000.svg';\r\nimport img3300X3000 from '../../img/3300X3000.svg';\r\nimport img3300X4000 from '../../img/3300X4000.svg';\r\nimport img4000X2000 from '../../img/4000X2000.svg';\r\nimport img4000X3000 from '../../img/4000X3000.svg';\r\nimport img4000X4000 from '../../img/4000X4000.svg';\r\n\r\nexport function choosingImage() {\r\n\tif (+sideXInput.value >= 3400 && +sideYInput.value > 3000) {\r\n\t\treturn img4000X4000;\r\n\t}\r\n\r\n\tif (+sideXInput.value === 3000 && +sideYInput.value === 3000) {\r\n\t\treturn img3000X3000;\r\n\t}\r\n\r\n\tif (+sideXInput.value <= 3000 && +sideYInput.value > 3000) {\r\n\t\treturn img2000X4000;\r\n\t}\r\n\r\n\tif (\r\n\t\t+sideXInput.value > 3000 &&\r\n\t\t+sideXInput.value < 3400 &&\r\n\t\t+sideYInput.value > 3000\r\n\t) {\r\n\t\treturn img3300X4000;\r\n\t}\r\n\r\n\tif (\r\n\t\t+sideXInput.value > 3000 &&\r\n\t\t+sideXInput.value < 3400 &&\r\n\t\t+sideYInput.value < 3000\r\n\t) {\r\n\t\treturn img3300X2000;\r\n\t}\r\n\r\n\tif (\r\n\t\t+sideXInput.value > 3000 &&\r\n\t\t+sideXInput.value < 3400 &&\r\n\t\t+sideYInput.value === 3000\r\n\t) {\r\n\t\treturn img3300X3000;\r\n\t}\r\n\r\n\tif (+sideXInput.value >= 3400 && +sideYInput.value < 3000) {\r\n\t\treturn img4000X2000;\r\n\t}\r\n\r\n\tif (+sideXInput.value >= 3400 && +sideYInput.value === 3000) {\r\n\t\treturn img4000X3000;\r\n\t}\r\n\r\n\tif (+sideXInput.value < 3000 && +sideYInput.value === 3000) {\r\n\t\treturn img2000X3000;\r\n\t}\r\n\r\n\treturn img2500X2000;\r\n}\r\n","import { total, totalCalc } from '../variables/variables';\r\nfunction handleCloseResult() {\r\n\tthis.removeEventListener('click', handleCloseResult);\r\n\r\n\tthis.closest('.result').nextElementSibling.remove();\r\n\tthis.closest('.result').remove();\r\n\trenameNumber();\r\n\tif (!result.children.length) {\r\n\t\ttotal.classList.remove('active');\r\n\t\ttotalCalc.classList.remove('active');\r\n\t\ttotalCalc.innerText = 'Список деталей';\r\n\t}\r\n\r\n\tif (total.classList.contains('active')) {\r\n\t\thandleCalcTotalDetailsList();\r\n\t}\r\n}\r\n\r\nfunction renameNumber() {\r\n\tconst numberItems = document.getElementsByClassName('number');\r\n\r\n\tfor (let i = 0; i < numberItems.length; i++) {\r\n\t\tnumberItems[i].innerText = `${numberItems.length - i}.`;\r\n\t}\r\n}\r\nexport { handleCloseResult };\r\n","import { total } from '../variables/variables';\r\nexport function printTotalDetailsList(\r\n\ttotalFrame25,\r\n\ttotalFrame20,\r\n\ttotalPattern25,\r\n\ttotalPattern20,\r\n\ttotalPattern15\r\n) {\r\n\ttotal.innerHTML = `\r\n\t<div class=\"total\">\r\n\t\t\t\t<div class=\"karkas\">\r\n\t\t\t\t\t<h3>КАРКАС</h3>\r\n\t\t\t\t\t<div class=\"total__frame\">\r\n\t\t\t\t\t\t<div class=\"total__box\">\r\n\t\t\t\t\t\t\t<h2 class=\"total__title\">25&nbsp;X&nbsp;25</h2>\r\n\t\t\t\t\t\t\t${totalFrame25.map(el => `<div>${el[0]}&nbsp;X&nbsp;${el[1]}</div>`).join(' ')}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"total__box\">\r\n\t\t\t\t\t\t\t<h2 class=\"total__title\">20&nbsp;X&nbsp;20</h2>\r\n\t\t\t\t\t\t\t${totalFrame20.map(el => `<div>${el[0]}&nbsp;X&nbsp${el[1]}</div>`).join(' ')}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"pattern\">\r\n\t\t\t\t\t<h3>РИСУНОК</h3>\r\n\t\t\t\t\t<div class=\"total__pattern\">\r\n\t\t\t\t\t\t<div class=\"total__box\">\r\n\t\t\t\t\t\t\t<h2 class=\"total__title\">25&nbsp;X&nbsp;25</h2>\r\n\t\t\t\t\t\t\t${totalPattern25.map(el => `<div>${el[0]}&nbsp;X&nbsp${el[1]}</div>`).join(' ')}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"total__box\">\r\n\t\t\t\t\t\t\t<h2 class=\"total__title\">20&nbsp;X&nbsp;20</h2>\r\n\t\t\t\t\t\t\t${totalPattern20.map(el => `<div>${el[0]}&nbsp;X&nbsp${el[1]}</div>`).join(' ')}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"total__box\">\r\n\t\t\t\t\t\t\t<h2 class=\"total__title\">15&nbsp;X&nbsp;15</h2>\r\n\t\t\t\t\t\t\t${totalPattern15.map(el => `<div>${el[0]}&nbsp;X&nbsp${el[1]}</div>`).join(' ')}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>`;\r\n}\r\n","import { printTotalDetailsList } from '../print/printTotalDetailsList';\r\n\r\nexport function handleCalcTotalDetailsList() {\r\n\tconst frame25 = document.getElementsByClassName('frame25');\r\n\tconst frame20 = document.getElementsByClassName('frame20');\r\n\tconst pattern25 = document.getElementsByClassName('pattern25');\r\n\tconst pattern20 = document.getElementsByClassName('pattern20');\r\n\tconst pattern15 = document.getElementsByClassName('pattern15');\r\n\r\n\tconst uniqueValuesFrame25 = [];\r\n\tconst totalFrame25 = [];\r\n\r\n\tconst uniqueValuesFrame20 = [];\r\n\tconst totalFrame20 = [];\r\n\r\n\tconst uniqueValuesPattern25 = [];\r\n\tconst totalPattern25 = [];\r\n\r\n\tconst uniqueValuesPattern20 = [];\r\n\tconst totalPattern20 = [];\r\n\r\n\tconst uniqueValuesPattern15 = [];\r\n\tconst totalPattern15 = [];\r\n\r\n\tfor (let i = 0; i < frame25.length; i++) {\r\n\t\tconst item = frame25[i].innerText.split(' X ');\r\n\r\n\t\tif (uniqueValuesFrame25.indexOf(+item[0]) === -1) {\r\n\t\t\tuniqueValuesFrame25.push(+item[0]);\r\n\t\t\ttotalFrame25.push([+item[0], +item[1]]);\r\n\t\t} else {\r\n\t\t\ttotalFrame25[uniqueValuesFrame25.indexOf(+item[0])][1] += +item[1];\r\n\t\t}\r\n\t}\r\n\r\n\tfor (let i = 0; i < frame20.length; i++) {\r\n\t\tconst item = frame20[i].innerText.split(' X ');\r\n\r\n\t\tif (uniqueValuesFrame20.indexOf(+item[0]) === -1) {\r\n\t\t\tuniqueValuesFrame20.push(+item[0]);\r\n\t\t\ttotalFrame20.push([+item[0], +item[1]]);\r\n\t\t} else {\r\n\t\t\ttotalFrame20[uniqueValuesFrame20.indexOf(+item[0])][1] += +item[1];\r\n\t\t}\r\n\t}\r\n\r\n\tfor (let i = 0; i < pattern25.length; i++) {\r\n\t\tconst item = pattern25[i].innerText.split(' X ');\r\n\r\n\t\tif (uniqueValuesPattern25.indexOf(+item[0]) === -1) {\r\n\t\t\tuniqueValuesPattern25.push(+item[0]);\r\n\t\t\ttotalPattern25.push([+item[0], +item[1]]);\r\n\t\t} else {\r\n\t\t\ttotalPattern25[uniqueValuesPattern25.indexOf(+item[0])][1] += +item[1];\r\n\t\t}\r\n\t}\r\n\r\n\tfor (let i = 0; i < pattern20.length; i++) {\r\n\t\tconst item = pattern20[i].innerText.split(' X ');\r\n\r\n\t\tif (uniqueValuesPattern20.indexOf(+item[0]) === -1) {\r\n\t\t\tuniqueValuesPattern20.push(+item[0]);\r\n\t\t\ttotalPattern20.push([+item[0], +item[1]]);\r\n\t\t} else {\r\n\t\t\ttotalPattern20[uniqueValuesPattern20.indexOf(+item[0])][1] += +item[1];\r\n\t\t}\r\n\t}\r\n\r\n\tfor (let i = 0; i < pattern15.length; i++) {\r\n\t\tconst item = pattern15[i].innerText.split(' X ');\r\n\r\n\t\tif (uniqueValuesPattern15.indexOf(+item[0]) === -1) {\r\n\t\t\tuniqueValuesPattern15.push(+item[0]);\r\n\t\t\ttotalPattern15.push([+item[0], +item[1]]);\r\n\t\t} else {\r\n\t\t\ttotalPattern15[uniqueValuesPattern15.indexOf(+item[0])][1] += +item[1];\r\n\t\t}\r\n\t}\r\n\r\n\tprintTotalDetailsList(\r\n\t\ttotalFrame25,\r\n\t\ttotalFrame20,\r\n\t\ttotalPattern25,\r\n\t\ttotalPattern20,\r\n\t\ttotalPattern15\r\n\t);\r\n}\r\n","import {sideXInput, sideYInput} from \"../variables/variables\";\r\nimport img2000X4000 from \"../../img/2000X4000.svg\";\r\n\r\nexport function sizesSupp(image) {\r\n\tlet sizes = `<span class=\"top\">${sideXInput.value}</span>\r\n\t\t\t\t\t <span class=\"left\">${sideYInput.value}</span>`;\r\n\r\n\tlet isReverse = false;\r\n\r\n\tif (image === img2000X4000) {\r\n\t\tsizes = `<span class=\"top\">${sideYInput.value}</span>\r\n\t\t\t\t\t<span class=\"left\">${sideXInput.value}</span>`;\r\n\r\n\t\tisReverse = true\r\n\t}\r\n\treturn {sizes, isReverse}\r\n}\r\n","import {choosingImage} from '../support/choosingImage';\r\nimport {handleCloseResult} from '../support/handleCloseResult';\r\nimport {result, select, sideXInput, total,} from '../variables/variables';\r\nimport {handleCalcTotalDetailsList} from '../calc/handleCalcTotalDetailsList';\r\nimport {sizesSupp} from \"../support/sizesSupp\";\r\n\r\nexport function print35Fence({\r\n\t                             sideX,\r\n\t                             sideY,\r\n\r\n\t                             gate1,\r\n\t                             gate2,\r\n\r\n\t                             insideSideX,\r\n\r\n\t                             insideSideY,\r\n\r\n\t                             insideGate1,\r\n\t                             insideGate2,\r\n\r\n\t                             tube,\r\n\t                             tubeInside,\r\n\r\n\t                             countX,\r\n\t                             countY,\r\n                             }) {\r\n\tconst number = document.getElementsByClassName('result')\r\n\t\t? document.getElementsByClassName('result').length + 1\r\n\t\t: 1;\r\n\r\n\tconst image = choosingImage();\r\n\r\n\tlet sizes = sizesSupp(image)\r\n\tlet dop460 = 1;\r\n\tif (+sideXInput.value >= 3400) {\r\n\t\tdop460 = 3;\r\n\t}\r\n\r\n\tresult.insertAdjacentHTML(\r\n\t\t'afterbegin',\r\n\r\n\t\t`\r\n\t<div class=\"result\">\r\n\t\t<span class=\"number\">${number}.</span>\r\n\t\t<span class=\"close\"></span>\r\n\t\t<div class=\"scheme\">\r\n\t\t\t${sizes}\r\n\t\t\t<img alt=\"Ограда\" src=\"${image}\" />\r\n\t\t\t<span class=\"model\">№&nbsp;${select.value}</span>\r\n\t\t</div>\r\n\t\r\n\t\t<div class=\"values\">\r\n\t\t\t<div class=\"outside\">\r\n\t\t\t\t<h2>${tube} X ${tube}</h2>\r\n\t\t\t\t<div class=\"frame${tube}\">${sideY} X ${4 * countY}</div>\r\n\t\t\t\t<div class=\"frame${tube}\">${sideX} X ${2 * countX}</div>\r\n\t\t\t\t<div class=\"frame${tube}\">${gate1} X 2</div>\r\n\t\t\t\t${gate2 ? `<div class=\"frame${tube}\"> ${gate2} X 2</div>` : ''}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class=\"inside\">\r\n\t\t\t\t<h2>${tubeInside} X ${tubeInside}</h2>\r\n\t\t\t\t<div class=\"pattern${tubeInside}\">${insideSideY} X ${4 * countY}</div>\r\n\t\t\t\t<div class=\"pattern${tubeInside}\">${insideSideX} X ${2 * countX}</div>\r\n\t\t\t\t<div class=\"pattern${tubeInside}\">${insideGate1} X 2</div>\r\n\t\t\t\t<div class=\"pattern${tubeInside}\">460 X ${\r\n\t\t\t2 * countX + 4 * countY + dop460\r\n\t\t}</div>\r\n\t\t\t\t${\r\n\t\t\tinsideGate2\r\n\t\t\t\t? `<div class=\"pattern${tubeInside}\">${insideGate2} X 2</div>`\r\n\t\t\t\t: ''\r\n\t\t}\r\n\t\t\t\t</div>\r\n\t\t</div>\r\n\t\t\r\n\t</div>\r\n\t<hr />\r\n\t`\r\n\t);\r\n\tconst close = document.getElementsByClassName('close');\r\n\r\n\tclose[0].addEventListener('click', handleCloseResult);\r\n\r\n\tif (total.classList.contains('active')) {\r\n\t\thandleCalcTotalDetailsList();\r\n\t}\r\n}\r\n","import {choosingImage} from '../support/choosingImage';\r\nimport {handleCloseResult} from '../support/handleCloseResult';\r\nimport {result, select, total} from '../variables/variables';\r\nimport {handleCalcTotalDetailsList} from '../calc/handleCalcTotalDetailsList';\r\nimport {sizesSupp} from \"../support/sizesSupp\";\r\n\r\nexport function print5Fence({\r\n\t                            insideSideX,\r\n\t                            insideSideY,\r\n\r\n\t                            insideGate1,\r\n\t                            insideGate2,\r\n\r\n\t                            tubeInside,\r\n\r\n\t                            countX,\r\n\t                            countY,\r\n                            }) {\r\n\tconst number = document.getElementsByClassName('result')\r\n\t\t? document.getElementsByClassName('result').length + 1\r\n\t\t: 1;\r\n\r\n\tconst image = choosingImage();\r\n\r\n\tlet sizes = sizesSupp(image)\r\n\r\n\tresult.insertAdjacentHTML(\r\n\t\t'afterbegin',\r\n\r\n\t\t`\r\n\t<div class=\"result\">\r\n\t\t<span class=\"number\">${number}.</span>\r\n\t\t<span class=\"close\"></span>\r\n\t\t<div class=\"scheme\">\r\n\t\t\t${sizes}\r\n\t\t\t<img alt=\"Ограда\" src=\"${image}\" />\r\n\t\t\t<span class=\"model\">№&nbsp${select.value}</span>\r\n\t\t</div>\r\n\t\r\n\t\t<div class=\"values\">\r\n\t\t\t\r\n\t\t\t<div class=\"inside\">\r\n\t\t\t\t<h2>${tubeInside} X ${tubeInside}</h2>\r\n\t\t\t\t<div class=\"frame${tubeInside}\">${insideSideY} X ${4 * countY}</div>\r\n\t\t\t\t<div class=\"frame${tubeInside}\">${insideSideX} X ${2 * countX}</div>\r\n\t\t\t\t<div class=\"frame${tubeInside}\">${insideGate1} X 2</div>\r\n\t\t\t\t${\r\n\t\t\tinsideGate2\r\n\t\t\t\t? `<div class=\"pattern${tubeInside}\">${insideGate2} X 2</div>`\r\n\t\t\t\t: ''\r\n\t\t}\r\n\t\t\t\t</div>\r\n\t\t</div>\r\n\t\t\r\n\t</div>\r\n\t<hr />\r\n\t`\r\n\t);\r\n\tconst close = document.getElementsByClassName('close');\r\n\r\n\tclose[0].addEventListener('click', handleCloseResult);\r\n\r\n\tif (total.classList.contains('active')) {\r\n\t\thandleCalcTotalDetailsList();\r\n\t}\r\n}\r\n","import {choosingImage} from '../support/choosingImage';\r\nimport {handleCloseResult} from '../support/handleCloseResult';\r\nimport {result, select, total,} from '../variables/variables';\r\nimport {handleCalcTotalDetailsList} from '../calc/handleCalcTotalDetailsList';\r\nimport {sizesSupp} from \"../support/sizesSupp\";\r\n\r\nexport function printFrameFence({\r\n\t                                sideX,\r\n\t                                sideY,\r\n\r\n\t                                gate1,\r\n\t                                gate2,\r\n\r\n\t                                tube,\r\n\r\n\t                                countX,\r\n\t                                countY,\r\n                                }) {\r\n\tconst number = document.getElementsByClassName('result')\r\n\t\t? document.getElementsByClassName('result').length + 1\r\n\t\t: 1;\r\n\r\n\tconst image = choosingImage();\r\n\r\n\tlet sizes = sizesSupp(image)\r\n\r\n\tresult.insertAdjacentHTML(\r\n\t\t'afterbegin',\r\n\r\n\t\t`\r\n\t<div class=\"result\">\r\n\t\t<span class=\"number\">${number}.</span>\r\n\t\t<span class=\"close\"></span>\r\n\t\t<div class=\"scheme\">\r\n\t\t\t${sizes}\r\n\t\t\t<img alt=\"Ограда\" src=\"${image}\" />\r\n\t\t\t<span class=\"model\">№&nbsp;${select.value}</span>\r\n\t\t</div>\r\n\t\r\n\t\t<div class=\"values\">\r\n\t\t\t<div class=\"inside\">\r\n\t\t\t\t<h2>${tube} X ${tube}</h2>\r\n\t\t\t\t<div class=\"frame${tube}\">${sideY} X ${4 * countY}</div>\r\n\t\t\t\t<div class=\"frame${tube}\">${sideX} X ${2 * countX}</div>\r\n\t\t\t\t<div class=\"frame${tube}\">${gate1} X 2</div>\r\n\t\t\t\t${gate2 ? `<div class=\"frame${tube}\"> ${gate2} X 2</div>` : ''}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\t<hr />\r\n\t`\r\n\t);\r\n\tconst close = document.getElementsByClassName('close');\r\n\tconsole.log(document.getElementsByClassName('result')[0]);\r\n\tclose[0].addEventListener('click', handleCloseResult);\r\n\r\n\tif (total.classList.contains('active')) {\r\n\t\thandleCalcTotalDetailsList();\r\n\t}\r\n}\r\n","import {choosingImage} from '../support/choosingImage';\r\nimport {handleCloseResult} from '../support/handleCloseResult';\r\nimport {result, select, total,} from '../variables/variables';\r\nimport {handleCalcTotalDetailsList} from '../calc/handleCalcTotalDetailsList';\r\nimport {sizesSupp} from \"../support/sizesSupp\";\r\n\r\nexport function printSimpleFence({\r\n\t                                 sideX,\r\n\t                                 sideY,\r\n\r\n\t                                 gate1,\r\n\t                                 gate2,\r\n\r\n\t                                 insideSideX,\r\n\t                                 insideSideY,\r\n\r\n\t                                 insideGate1,\r\n\t                                 insideGate2,\r\n\r\n\t                                 tube,\r\n\t                                 tubeInside,\r\n\r\n\t                                 countX,\r\n\t                                 countY,\r\n                                 }) {\r\n\tconst number = document.getElementsByClassName('result')\r\n\t\t? document.getElementsByClassName('result').length + 1\r\n\t\t: 1;\r\n\r\n\tconst image = choosingImage();\r\n\r\n\tlet sizes = sizesSupp(image)\r\n\r\n\tresult.insertAdjacentHTML(\r\n\t\t'afterbegin',\r\n\r\n\t\t`\r\n\t<div class=\"result\">\r\n\t\t<span class=\"number\">${number}.</span>\r\n\t\t<span class=\"close\"></span>\r\n\t\t<div class=\"scheme\">\r\n\t\t\t${sizes}\r\n\t\t\t<img alt=\"Ограда\" src=\"${image}\" />\r\n\t\t\t<span class=\"model\">№&nbsp;${select.value}</span>\r\n\t\t</div>\r\n\t\r\n\t\t<div class=\"values\">\r\n\t\t\t<div class=\"outside\">\r\n\t\t\t\t<h2>${tube} X ${tube}</h2>\r\n\t\t\t\t<div class=\"frame${tube}\">${sideY} X ${4 * countY}</div>\r\n\t\t\t\t<div class=\"frame${tube}\">${sideX} X ${2 * countX}</div>\r\n\t\t\t\t<div class=\"frame${tube}\">${gate1} X 2</div>\r\n\t\t\t\t${gate2 ? `<div class=\"frame${tube}\"> ${gate2} X 2</div>` : ''}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class=\"inside\">\r\n\t\t\t\t<h2>${tubeInside} X ${tubeInside}</h2>\r\n\t\t\t\t<div class=\"pattern${tubeInside}\">${insideSideY} X ${2 * countY}</div>\r\n\t\t\t\t<div class=\"pattern${tubeInside}\">${insideSideX} X ${countX}</div>\r\n\t\t\t\t<div class=\"pattern${tubeInside}\">${insideGate1} X 1</div>\r\n\t\t\t\t${\r\n\t\t\tinsideGate2\r\n\t\t\t\t? `<div class=\"pattern${tubeInside}\">${insideGate2} X 2</div>`\r\n\t\t\t\t: ''\r\n\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t\r\n\t</div>\r\n\t<hr />\r\n\t`\r\n\t);\r\n\tconst close = document.getElementsByClassName('close');\r\n\r\n\tclose[0].addEventListener('click', handleCloseResult);\r\n\r\n\tif (total.classList.contains('active')) {\r\n\t\thandleCalcTotalDetailsList();\r\n\t}\r\n}\r\n","export function fenceSideChoose() {\r\n\tconsole.log(document\r\n\t\t.getElementById('leftFence')\r\n\t\t.children[0]\r\n\t\t.classList\r\n\t\t.contains('active'))\r\n\treturn document\r\n\t\t.getElementById('leftFence')\r\n\t\t.children[0]\r\n\t\t.classList\r\n\t\t.contains('active')\r\n}\r\n","import {choosingImage} from '../support/choosingImage';\r\nimport {handleCloseResult} from '../support/handleCloseResult';\r\nimport {result, select, total,} from '../variables/variables';\r\nimport {handleCalcTotalDetailsList} from '../calc/handleCalcTotalDetailsList';\r\nimport {sizesSupp} from \"../support/sizesSupp\";\r\nimport {fenceSideChoose} from \"../support/fenceSideChoose\";\r\n\r\nexport function print15And25Fence({\r\n\t                                  sideX,\r\n\t                                  sideY,\r\n\t                                  gate1,\r\n\t                                  gate2,\r\n\t                                  sideXRectangle,\r\n\t                                  halfXRectangle,\r\n\t                                  sideXJumper,\r\n\t                                  sideYRectangle,\r\n\t                                  halfYRectangle,\r\n\t                                  sideYJumper,\r\n\t                                  tube,\r\n\t                                  tubeInside,\r\n\t                                  countX,\r\n\t                                  countY,\r\n\t                                  gateCount,\r\n\t                                  rectangleCountX,\r\n\t                                  rectangleCountY,\r\n\t                                  rectangleSectionGate1,\r\n\t                                  rectangleInsideGate1,\r\n\t                                  rectangleSectionGate2,\r\n\t                                  rectangleInsideGate2,\r\n\t                                  rectangleGateCount,\r\n                                  }) {\r\n\tconst number = document.getElementsByClassName('result')\r\n\t\t? document.getElementsByClassName('result').length + 1\r\n\t\t: 1;\r\n\r\n\tconst image = choosingImage();\r\n\tconst {sizes, isReverse} = sizesSupp(image);\r\n\r\n\tresult.insertAdjacentHTML(\r\n\t\t'afterbegin',\r\n\r\n\t\t`\r\n\t<div class=\"result\">\r\n\t\t<span class=\"number\">${number}.</span>\r\n\t\t<span class=\"close\"></span>\r\n\t\t<div class=\"scheme\">\r\n\t\t\t${sizes}\r\n\t\t\t<img alt=\"Ограда\" src=\"${image}\" \r\n\t\t\tclass=\"${fenceSideChoose()\r\n\t\t\t? isReverse ? 'reverseX' : 'reverse'\r\n\t\t\t: ''}\" \r\n\t\t\t/>\r\n\t\t\t<span class=\"model\">№&nbsp;${select.value}</span>\r\n\t\t</div>\r\n\t\t<div class=\"values\">\r\n\t\t\t<div class=\"outside\">\r\n\t\t\t\t<h2>${tube} X ${tube}</h2>\r\n\t\t\t\t<div class=\"frame${tube}\">${sideY} X ${4 * countY}</div>\r\n\t\t\t\t<div class=\"frame${tube}\">${sideX} X ${2 * (countX + gateCount)}</div>\r\n\t\t\t${gate1 ? `<div class=\"frame${tube}\"> ${gate1} X 2</div>` : ''}\r\n\t\t\t\t${gate2 ? `<div class=\"frame${tube}\"> ${gate2} X 2</div>` : ''}\r\n\t\t\t</div>\r\n\t\t\t<div class=\"inside\">\r\n\t\t\t\t<h2>${tubeInside} X ${tubeInside}</h2>\r\n\t\t\t\t\r\n\t\t\t\t<div class=\"pattern25\">${sideYRectangle} X ${\r\n\t\t\trectangleCountY * 4 * countY\r\n\t\t}</div>\r\n\t\t\t\t\r\n\t\t\t\t${halfYRectangle ? `<div class=\"pattern25 lol\">${halfYRectangle} X 8</div>` : ''}\r\n\t\t\t\t\r\n\t\t\t\t<div class=\"pattern25\">${sideYJumper} X ${\r\n\t\t\t(rectangleCountY + 1) * countY * 2\r\n\t\t}</div>\r\n\t\t\t\t<br>\r\n\t\t\t\t<div class=\"pattern25\">${sideXRectangle} X ${\r\n\t\t\trectangleCountX * 2 * (countX + gateCount) + rectangleGateCount * 2\r\n\t\t}</div>\r\n\t\t\t\t\r\n\t\t\t\t${halfXRectangle\r\n\t\t\t? `<div class=\"pattern25 lol\">${halfXRectangle} X ${rectangleCountX * 4 * (gateCount * 2)}</div>`\r\n\t\t\t: ''} \r\n\t\t\t\t\r\n\t\t\t\t<div class=\"pattern25\">${sideXJumper} X ${\r\n\t\t\t(rectangleCountX + 1) * (countX + gateCount) + rectangleGateCount + 2\r\n\t\t}</div> \r\n\t\t\t\t<br>\r\n\t\t\t\t${\r\n\t\t\trectangleSectionGate1\r\n\t\t\t\t? `<div class=\"gateRectangle\">${rectangleSectionGate1} X 2</div>\r\n\t\t\t\t<div>${rectangleInsideGate1} X 2</div>`\r\n\t\t\t\t: `<div class=\"gateRectangle\">${rectangleSectionGate2} X 2</div>\r\n\t\t\t\t<div>${rectangleInsideGate2} X 2</div>`\r\n\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\t<hr>\r\n\t`\r\n\t);\r\n\tconst close = document.getElementsByClassName('close');\r\n\r\n\tclose[0].addEventListener('click', handleCloseResult);\r\n\r\n\tif (total.classList.contains('active')) {\r\n\t\thandleCalcTotalDetailsList();\r\n\t}\r\n}\r\n","import {print35Fence} from './print35Fence';\r\nimport {print5Fence} from './print5Fence';\r\nimport {printFrameFence} from './printFrameFence';\r\nimport {printSimpleFence} from './printSimpleFence';\r\nimport {print15And25Fence} from './print15And25Fence'\r\n\r\nexport {print35Fence, print5Fence, printFrameFence, printSimpleFence, print15And25Fence};\r\n","import {\r\n\tcalcLogicTo15And25Fence,\r\n\tcalcLogicTo35Fence,\r\n\tcalcLogicToFrameFence,\r\n\tcalcLogicToSimpleFence\r\n} from '../calc/entryCalcLogic';\r\nimport {print15And25Fence, print35Fence, print5Fence, printFrameFence, printSimpleFence} from '../print/entryPrint';\r\n\r\n\r\nexport function distributionCalcFence(modelNum, isBigX, isBigY) {\r\n\tif (modelNum >= 1 && modelNum <= 4 && modelNum !== 3) {\r\n\t\tprintSimpleFence(calcLogicToSimpleFence(50, 25, 25, isBigX, isBigY));\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (modelNum === 3) {\r\n\t\tprintFrameFence(calcLogicToFrameFence(50, 25, isBigX, isBigY));\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (modelNum === 5) {\r\n\t\tprint5Fence(calcLogicToSimpleFence(40, 20, 20, isBigX, isBigY));\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (modelNum === 6 || modelNum === 10) {\r\n\t\tprintFrameFence(calcLogicToFrameFence(40, 25, isBigX, isBigY));\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (modelNum === 14) {\r\n\t\tprintSimpleFence(calcLogicToSimpleFence(40, 25, 25, isBigX, isBigY));\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (modelNum === 11) {\r\n\t\tprintSimpleFence(calcLogicToSimpleFence(40, 25, 20, isBigX, isBigY));\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (modelNum === 15) {\r\n\t\tprint15And25Fence(calcLogicTo15And25Fence(40, 25, 25, 240, isBigX, isBigY));\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (modelNum === 21 || modelNum === 22) {\r\n\t\tprintSimpleFence(calcLogicToSimpleFence(30, 20, 15, isBigX, isBigY));\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (modelNum === 20 || modelNum === 23 || modelNum === 24) {\r\n\t\tprintFrameFence(calcLogicToFrameFence(30, 20, isBigX, isBigY));\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (modelNum === 25) {\r\n\t\tprint15And25Fence(calcLogicTo15And25Fence(30, 20, 20, 240, isBigX, isBigY));\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (modelNum === 32 || modelNum === 34) {\r\n\t\tprintSimpleFence(calcLogicToSimpleFence(25, 20, 15, isBigX, isBigY));\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (modelNum === 35) {\r\n\t\tprint35Fence(calcLogicTo35Fence(25, 20, 15, isBigX, isBigY));\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (modelNum >= 30 && modelNum <= 40) {\r\n\t\tprintFrameFence(calcLogicToSimpleFence(25, 20, 15, isBigX, isBigY));\r\n\t}\r\n}\r\n","import {distributionCalcFence} from './distributionCalcFence';\r\nimport {select} from \"../variables/variables\";\r\n\r\nexport function distributionLogic(sizeX, sizeY) {\r\n\tif (sizeX > 3000 && sizeY > 3000) {\r\n\t\tdistributionCalcFence(+select.value, true, true);\r\n\t\treturn;\r\n\t}\r\n\tif (sizeX > 3000) {\r\n\t\tdistributionCalcFence(+select.value, true);\r\n\t\treturn;\r\n\t}\r\n\tif (sizeY > 3000) {\r\n\t\tdistributionCalcFence(+select.value, false, true);\r\n\t\treturn;\r\n\t}\r\n\tdistributionCalcFence(+select.value);\r\n}\r\n","'strict mode';\r\nimport {calc, select, sideXInput, sideYInput, total, totalCalc,} from './variables/variables';\r\nimport {distributionLogic} from './distribution/distributionLogic';\r\nimport {handleCalcTotalDetailsList} from './calc/handleCalcTotalDetailsList';\r\n\r\n(function () {\r\n\tsideXInput.value = 3500;\r\n\tsideYInput.value = 2000;\r\n\r\n\tdocument.getElementById('date').innerText = String(new Date().getFullYear());\r\n\r\n\tcalc.addEventListener('click', handleCalc);\r\n\tsideXInput.addEventListener('keypress', handlePress);\r\n\tsideYInput.addEventListener('keypress', handlePress);\r\n\ttotalCalc.addEventListener('click', handleTotalCalc);\r\n\tdocument.getElementById('leftFence').addEventListener('click', handleLeftFence)\r\n\r\n\tfunction handleLeftFence(e) {\r\n\t\te.target.children[0].classList.toggle('active')\r\n\t}\r\n\r\n\r\n\tfunction handleTotalCalc(e) {\r\n\t\te.target.classList.toggle('active');\r\n\r\n\t\ttotal.classList.toggle('active');\r\n\r\n\t\tif (e.target.classList.contains('active')) {\r\n\t\t\te.target.innerText = 'Свернуть';\r\n\t\t} else {\r\n\t\t\te.target.innerText = 'Список деталей';\r\n\t\t}\r\n\r\n\t\tif (total.classList.contains('active')) {\r\n\t\t\thandleCalcTotalDetailsList();\r\n\t\t}\r\n\t}\r\n\r\n\tfunction handlePress(e) {\r\n\t\tif (isNaN(e.target.value + e.key) || e.target.value + e.key > 10000) {\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\r\n\t\tif (e.key === 'Enter' && sideXInput.value && sideYInput.value) {\r\n\t\t\thandleCalc();\r\n\t\t}\r\n\t}\r\n\r\n\tfunction handleCalc() {\r\n\t\tif (!select.value) {\r\n\t\t\treturn alert('Выбери модель');\r\n\t\t}\r\n\r\n\t\tif (+sideXInput.value && +sideYInput.value) {\r\n\t\t\tif (+sideXInput.value < 10) {\r\n\t\t\t\tsideXInput.value *= 1000;\r\n\t\t\t}\r\n\r\n\t\t\tif (+sideYInput.value < 10) {\r\n\t\t\t\tsideYInput.value *= 1000;\r\n\t\t\t}\r\n\r\n\t\t\tdistributionLogic(+sideXInput.value, +sideYInput.value);\r\n\r\n\t\t\t// sideXInput.value = '';\r\n\t\t\t// sideYInput.value = '';\r\n\t\t} else {\r\n\t\t\talert('Ты не все ввел!');\r\n\t\t}\r\n\t}\r\n})();\r\n"]}